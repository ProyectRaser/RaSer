# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: ["ramon"]
  pull_request:
    branches: ["ramon"]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4

    - name: Build project and jar
      run: bash ./gradlew build

    - name: Run tests
      run: bash ./gradlew test

    - name: Generate JaCoCo coverage report
      run: bash ./gradlew jacocoTestReport

    - name: Upload coverage report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: build/reports/jacoco/test/html

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=YOUR_PROJECT_KEY
          -Dsonar.organization=YOUR_ORG
          -Dsonar.host.url=https://sonarcloud.io
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/gradle@v1
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: build/libs/*.jar

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker image with JAR
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/miapp:latest .

    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/miapp:latest

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Submit dependency graph
      uses: gradle/actions/dependency-submission@v4


